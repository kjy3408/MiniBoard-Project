<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.board.miniprojectBoard.repository.MainBoardRepository">

	<resultMap type="com.mini.board.miniprojectBoard.entity.Board" id="BoardMap">
		<result property="boardId" column="board_id"/>
		<result property="boardTitle" column="board_title"/>
		<result property="boardContent" column="board_content"/>
		<result property="boardDate" column="board_date"/>
		<result property="boardViews" column="board_views"/>
		<result property="boardModifyFlag" column="board_modify_flag"/>
		<result property="commentCount" column="comment_count"/>
		<result property="likeCount" column="like_count"/>
		
		<association property="user" resultMap="UserMap" />
	</resultMap>
	
	<resultMap type="com.mini.board.miniprojectBoard.entity.User" id="UserMap">
		<id property="userId" column="user_id" />
		<result property="username" column="username"/>
<!-- 		<result property="password" column="password"/> -->
		<result property="nickname" column="nickname"/>
		<collection property="authorities" javaType="list" resultMap="AuthorityMap" />
	</resultMap>
	
	<resultMap type="com.mini.board.miniprojectBoard.entity.Authority" id="AuthorityMap">
		<id property="authorityId" column="authority_id"/>
		<result property="userId" column="user_id"/>
		<result property="roleId" column="role_id"/>
		<association property="role" resultMap="RoleMap"/>
	</resultMap>
	
	<resultMap type="com.mini.board.miniprojectBoard.entity.Role" id="RoleMap">
		<id property="roleId" column="role_id"/>
		<result property="roleName" column="role_name"/>
	</resultMap>



	<resultMap type="com.mini.board.miniprojectBoard.entity.Movie" id="MovieMap">
		<id property="movieId" column="movie_id"/>
		<result property="movieTitle" column="movie_title"/>
		<collection property="cast" javaType="list" resultMap="CastMap"/>
		<collection property="country" javaType="list" resultMap="CountryMap"/>
	</resultMap>
	
	
	<resultMap type="com.mini.board.miniprojectBoard.entity.Cast" id="CastMap">
		<id property="castId" column="cast_id"/>
		<result property="castName" column="cast_name"/>
		<result property="castRole" column="cast_role"/>
		<result property="charactor" column="charactor"/>
	</resultMap>

	<resultMap type="com.mini.board.miniprojectBoard.entity.Country" id="CountryMap">
		<id property="countryId" column="country_id"/>
		<result property="country" column="country"/>
	</resultMap>

	<select id="getUserInfo" resultMap="UserMap">
		SELECT
			user_id,
			username,
			nickname
		FROM
			user_tb
		WHERE
			user_id = #{userId}
	</select>
	
	<select id="getBoards" resultMap="BoardMap">
		SELECT
			bt.board_id,
		    bt.board_title,
		    bt.board_content,
		    bt.board_date,
		    bt.board_views,
		    bt.board_modify_flag,
		    
		    ut.user_id,
		    ut.username,
		    ut.nickname,
		    bt.comment_count,
		    bt.like_count
		FROM
			board_tb bt
		    LEFT OUTER JOIN user_tb ut ON (bt.user_id = ut.user_id)
		WHERE
			1=1
			<if test="searchValue != null">
				AND	bt.board_title LIKE concat ("%", #{searchValue}, "%")
				OR 	bt. board_content LIKE concat ("%", #{searchValue}, "%")
			</if>
		ORDER BY
			bt.board_date DESC,
    		bt.board_id DESC
		LIMIT
			#{index}, 15;
	</select>
	
	<insert id="readBoard" parameterType="hashmap">
		INSERT INTO read_tb
		VALUES (0, #{userId}, #{boardId}, DATE_FORMAT(now(), '%Y-%m-%d'))
	</insert>
	
	<select id="getTotalCount" parameterType="hashmap" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			board_tb
		WHERE
		1=1
			<if test="searchValue != null">
				AND board_title LIKE concat ("%", #{searchValue}, "%")
				OR 	board_content LIKE concat ("%", #{searchValue}, "%")
			</if>
	</select>
	
	<select id="alreadyReadBoard" parameterType="hashmap" resultType="hashmap">
		SELECT
			user_id,
			board_id
		FROM
			read_tb
		WHERE
			user_id = #{userId}
		AND board_id = #{boardId}
	</select>
	
	<update id="increaseViews" parameterType="hashmap">
		UPDATE 
			board_tb
		SET 
			board_views = board_views + 1
		WHERE 
			board_id = #{boardId};
	</update>
	
	<select id="commentCount" resultType="Integer">
		SELECT
			board_id,
			user_id,
			COUNT(*)
		FROM
			comment_tb
	</select>
	
	<select id="test" resultMap="MovieMap">
		select
			mt.movie_id,
			mt.movie_title,
			ct.cast_name,
			ct.cast_role,
			mct.charactor,
			ot.country
		from
			movie_tb mt
			left outer join movie_cast_tb mct on (mt.movie_id = mct.movie_id)
			left outer join cast_tb ct on (mct.cast_id = ct.cast_id)
	       	left outer join movie_country_tb mot on (mot.movie_id = mt.movie_id)
            left outer join country_tb ot on (mot.country_id = ot.country_id)
		where
			mt.movie_id = 1
	</select>
	
	<select id="cast" resultMap="CastMap">
		select
			ct.cast_id,
			ct.cast_name,
			ct.cast_role,
			mct.charactor
		from
			movie_tb mt
			left outer join movie_cast_tb mct on (mt.movie_id = mct.movie_id)
			left outer join cast_tb ct on (mct.cast_id = ct.cast_id)
		where
			mt.movie_id = 1 
	</select>
</mapper>